<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AGAS Room Organizer</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background: #ffffff;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      min-height: 100vh;
    }
    .container {
      width: 850px;
      margin-top: 30px;
      padding: 20px 30px;
      background: #fff;
      border-radius: 12px;
      box-shadow: 0px 4px 15px rgba(0,0,0,0.1);
      position: relative;
    }
    .logo {
      text-align: center;
      margin-bottom: 20px;
    }
    .logo h1 {
      font-size: 48px;
      font-weight: 900;
      background: linear-gradient(90deg, #ff4fd8, #b34dff);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      margin: 0;
    }
    .logo span {
      font-size: 16px;
      color: #111;
      letter-spacing: 3px;
    }
    .status-bar {
      position: absolute;
      top: 20px;
      left: 30px;
      font-size: 14px;
      font-weight: bold;
      color: #333;
    }
    .logoff-btn {
      position: absolute;
      top: 20px;
      right: 30px;
      background: #f44336;
      color: white;
      border: none;
      border-radius: 8px;
      padding: 8px 15px;
      cursor: pointer;
      font-size: 14px;
      font-weight: bold;
      display: none;
    }
    h2 { margin: 10px 0; font-size: 18px; font-weight: 700; }
    .form-group {
      display: flex; gap: 15px; margin-bottom: 20px;
    }
    .form-group input, .form-group select {
      flex: 1; padding: 10px; border: 1px solid #ccc; border-radius: 8px; font-size: 14px;
    }
    .book-btn {
      margin-top: 10px; width: 100%; padding: 10px;
      border: none; border-radius: 8px;
      background: linear-gradient(90deg, #ff4fd8, #b34dff);
      color: white; font-size: 15px; font-weight: bold;
      cursor: pointer; transition: 0.3s;
    }
    .book-btn:hover { opacity: 0.9; }
    #loginSection .book-btn { padding: 8px; font-size: 13px; margin-top: 5px; }
    .login-links { margin-top: 10px; }
    .login-links a {
      display: block; margin-top: 5px; font-size: 13px;
      color: #b34dff; text-decoration: none; cursor: pointer;
    }
    .login-links a:hover { text-decoration: underline; }
    .tabs { display: flex; gap: 10px; margin: 15px 0; }
    .tab {
      flex: 1; padding: 10px; border: none;
      border-radius: 8px; background: #eee; cursor: pointer;
      font-weight: bold;
    }
    .tab.active { background: linear-gradient(90deg, #ff4fd8, #b34dff); color: #fff; }
    .meeting-list, .users-list { margin-top: 20px; }
    table { width: 100%; border-collapse: collapse; }
    table th, table td {
      padding: 10px; border-bottom: 1px solid #eee;
      text-align: left; font-size: 14px;
    }
    .action-btn {
      margin: 2px; padding: 5px 10px;
      border: none; border-radius: 6px;
      font-size: 12px; cursor: pointer;
    }
    .edit-btn { background: #4cafef; color: white; }
    .delete-btn { background: #f44336; color: white; }
    .reset-btn { background: #ff9800; color: white; }
    .promote-btn { background: #9c27b0; color: white; }
    .view-only { color: #666; font-size: 12px; }
  </style>
</head>
<body>
  <div class="container">
    <div class="logo">
      <h1>AGAS</h1>
      <span>ROOM ORGANIZER</span>
    </div>
    <div class="status-bar" id="statusBar"></div>
    <button class="logoff-btn" id="logoffBtn">Logoff</button>

    <!-- LOGIN -->
    <div id="loginSection">
      <h2>Login</h2>
      <div class="form-group">
        <input type="text" id="loginUsername" placeholder="Usuário">
        <input type="password" id="loginPassword" placeholder="Senha">
      </div>
      <button class="book-btn" onclick="login()">Entrar</button>
      <div class="login-links">
        <a onclick="showRegister()">Criar Conta</a>
        <a onclick="showRecovery()">Recuperar Senha</a>
      </div>
    </div>

    <!-- REGISTRO -->
    <div id="registerSection" style="display:none;">
      <h2>Criar Conta</h2>
      <div class="form-group">
        <input type="text" id="regUsername" placeholder="Usuário">
        <input type="password" id="regPassword" placeholder="Senha">
      </div>
      <div class="form-group">
        <input type="text" id="regQuestion" placeholder="Pergunta de segurança">
        <input type="text" id="regAnswer" placeholder="Resposta de segurança">
      </div>
      <button class="book-btn" onclick="register()">Registrar</button>
      <button class="book-btn" style="background:#999;" onclick="showLogin()">Voltar</button>
    </div>

    <!-- RECUPERAR SENHA -->
    <div id="recoverySection" style="display:none;">
      <h2>Recuperar Senha</h2>
      <input type="text" id="recUsername" placeholder="Usuário"><br><br>
      <button class="book-btn" onclick="askQuestion()">Próximo</button>
      <button class="book-btn" style="background:#999;" onclick="showLogin()">Voltar</button>
      <div id="securityQuestion" style="margin-top:15px;display:none;"></div>
    </div>

    <!-- SISTEMA -->
    <div id="mainSection" style="display:none;">
      <div class="tabs">
        <button class="tab active" onclick="switchTab('horarios')">Horários</button>
        <button class="tab" id="usuariosTabBtn" style="display:none;" onclick="switchTab('usuarios')">Usuários</button>
      </div>

      <!-- HORARIOS -->
      <div id="tabHorarios">
        <h2>Reservar</h2>
        <div class="form-group">
          <input type="text" id="titulo" placeholder="Título da reunião">
          <input type="date" id="data">
          <select id="horaInicio"></select>
          <select id="horaFim"></select>
        </div>
        <button class="book-btn" id="bookBtn">Agendar Reunião</button>
        <div class="meeting-list">
          <h3>Reuniões Agendadas</h3>
          <table id="meetingTable">
            <thead>
              <tr>
                <th>Título</th>
                <th>Organizador</th>
                <th>Data</th>
                <th>Início</th>
                <th>Fim</th>
                <th>Ações</th>
              </tr>
            </thead>
            <tbody></tbody>
          </table>
        </div>
      </div>

      <!-- USUARIOS (só ADM) -->
      <div id="tabUsuarios" style="display:none;">
        <h2>Gerenciar Usuários</h2>
        <div class="users-list">
          <table id="usersTable">
            <thead>
              <tr>
                <th>Usuário</th>
                <th>Tipo</th>
                <th>Ações</th>
              </tr>
            </thead>
            <tbody></tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <script>
    // ---------- DADOS ----------
    let reservas = JSON.parse(localStorage.getItem("reservas")) || [];
    let users = JSON.parse(localStorage.getItem("users")) || [];
    let loggedUser = localStorage.getItem("loggedUser") || null;

    if (!users.some(u => u.username === "adm")) {
      users.push({ username: "adm", password: "1234", question: "Padrão", answer: "1234", isAdmin: true });
      saveData();
    }

    const horarios = [];
    for (let h = 7; h <= 18; h++) {
      horarios.push((h < 10 ? "0"+h : h)+":00");
      horarios.push((h < 10 ? "0"+h : h)+":30");
    }

    const horaInicioSelect = document.getElementById('horaInicio');
    const horaFimSelect = document.getElementById('horaFim');
    horarios.forEach(h => {
      horaInicioSelect.add(new Option(h, h));
      horaFimSelect.add(new Option(h, h));
    });

    const tableBody = document.querySelector("#meetingTable tbody");

    // ---------- FUNÇÕES ----------
    function saveData() {
      localStorage.setItem("reservas", JSON.stringify(reservas));
      localStorage.setItem("users", JSON.stringify(users));
    }

    function renderTable() {
      tableBody.innerHTML = "";
      const userObj = users.find(u => u.username === loggedUser);
      reservas.forEach((r, index) => {
        const row = document.createElement("tr");
        let actionBtns = "";
        if (userObj?.isAdmin || r.organizador === loggedUser) {
          actionBtns = `
            <button class="action-btn edit-btn" onclick="editar(${index})">Editar</button>
            <button class="action-btn delete-btn" onclick="excluir(${index})">Excluir</button>
          `;
        } else {
          actionBtns = `<span class="view-only">Visualização</span>`;
        }
        row.innerHTML = `
          <td>${r.titulo}</td>
          <td>${r.organizador}</td>
          <td>${r.data}</td>
          <td>${r.inicio}</td>
          <td>${r.fim}</td>
          <td>${actionBtns}</td>
        `;
        tableBody.appendChild(row);
      });
    }

    document.getElementById("bookBtn").addEventListener("click", () => {
      const titulo = document.getElementById("titulo").value;
      const data = document.getElementById("data").value;
      const inicio = horaInicioSelect.value;
      const fim = horaFimSelect.value;
      if (!titulo || !data || !inicio || !fim) return alert("Preencha todos os campos!");
      if (horarios.indexOf(inicio) >= horarios.indexOf(fim)) return alert("Fim deve ser depois do início!");
      if (reservas.some(r => r.data === data && ((inicio >= r.inicio && inicio < r.fim) || (fim > r.inicio && fim <= r.fim) || (inicio <= r.inicio && fim >= r.fim)))) {
        return alert("Já existe uma reserva nesse intervalo!");
      }
      reservas.push({ titulo, organizador: loggedUser, data, inicio, fim });
      saveData(); renderTable();
    });

    window.excluir = i => { reservas.splice(i, 1); saveData(); renderTable(); };
    window.editar = i => {
      const r = reservas[i];
      document.getElementById("titulo").value = r.titulo;
      document.getElementById("data").value = r.data;
      horaInicioSelect.value = r.inicio;
      horaFimSelect.value = r.fim;
      reservas.splice(i, 1);
      saveData(); renderTable();
    };

    function login() {
      const username = document.getElementById("loginUsername").value.trim();
      const password = document.getElementById("loginPassword").value.trim();
      const user = users.find(u => u.username.toLowerCase() === username.toLowerCase() && u.password === password);
      if (!user) return alert("Usuário ou senha incorretos!");
      loggedUser = user.username;
      localStorage.setItem("loggedUser", loggedUser);
      showMain();
    }

    // Permitir login ao pressionar Enter
    document.getElementById("loginUsername").addEventListener("keyup", function(event) {
      if (event.key === "Enter") login();
    });
    document.getElementById("loginPassword").addEventListener("keyup", function(event) {
      if (event.key === "Enter") login();
    });

    function register() {
      const username = document.getElementById("regUsername").value.trim();
      const password = document.getElementById("regPassword").value.trim();
      const question = document.getElementById("regQuestion").value.trim();
      const answer = document.getElementById("regAnswer").value.trim();
      if (!username || !password || !question || !answer) return alert("Preencha todos os campos!");
      if (users.some(u => u.username.toLowerCase() === username.toLowerCase())) return alert("Usuário já existe!");
      users.push({ username, password, question, answer, isAdmin: false });
      saveData(); alert("Usuário registrado com sucesso!"); showLogin();
    }

    function askQuestion() {
      const username = document.getElementById("recUsername").value.trim();
      const user = users.find(u => u.username.toLowerCase() === username.toLowerCase());
      if (!user) return alert("Usuário não encontrado!");
      const div = document.getElementById("securityQuestion");
      div.style.display = "block";
      div.innerHTML = `
        <p>${user.question}</p>
        <input type="text" id="recAnswer" placeholder="Resposta"><br><br>
        <input type="password" id="newPassword" placeholder="Nova senha"><br><br>
        <button class="book-btn" onclick="resetPassword('${user.username}')">Redefinir Senha</button>
      `;
    }

    function resetPassword(username) {
      const user = users.find(u => u.username === username);
      const answer = document.getElementById("recAnswer").value.trim();
      const newPass = document.getElementById("newPassword").value.trim();
      if (answer !== user.answer) return alert("Resposta incorreta!");
      if (!newPass) return alert("Digite uma nova senha!");
      user.password = newPass; saveData(); alert("Senha redefinida!"); showLogin();
    }

    function logoff() {
      loggedUser = null;
      localStorage.removeItem("loggedUser");
      showLogin();
    }

    function showMain() {
      document.getElementById("loginSection").style.display = "none";
      document.getElementById("registerSection").style.display = "none";
      document.getElementById("recoverySection").style.display = "none";
      document.getElementById("mainSection").style.display = "block";
      document.getElementById("logoffBtn").style.display = "inline-block";
      const userObj = users.find(u => u.username === loggedUser);
      document.getElementById("statusBar").innerText = `Usuário: ${loggedUser} ${userObj?.isAdmin ? "(ADM)" : ""}`;
      if (userObj?.isAdmin) document.getElementById("usuariosTabBtn").style.display = "inline-block";
      else document.getElementById("usuariosTabBtn").style.display = "none";
      renderTable(); renderUsersTable();
    }

    function showLogin() {
      document.getElementById("loginSection").style.display = "block";
      document.getElementById("registerSection").style.display = "none";
      document.getElementById("recoverySection").style.display = "none";
      document.getElementById("mainSection").style.display = "none";
      document.getElementById("logoffBtn").style.display = "none";
      document.getElementById("statusBar").innerText = "";
    }

    function showRegister() { document.getElementById("loginSection").style.display = "none"; document.getElementById("registerSection").style.display = "block"; }
    function showRecovery() { document.getElementById("loginSection").style.display = "none"; document.getElementById("recoverySection").style.display = "block"; document.getElementById("securityQuestion").style.display = "none"; }

    function switchTab(tab) {
      document.querySelectorAll(".tab").forEach(btn => btn.classList.remove("active"));
      if (tab === "horarios") {
        document.querySelector("#tabHorarios").style.display = "block";
        document.querySelector("#tabUsuarios").style.display = "none";
        document.querySelectorAll(".tab")[0].classList.add("active");
      } else {
        document.querySelector("#tabHorarios").style.display = "none";
        document.querySelector("#tabUsuarios").style.display = "block";
        document.querySelectorAll(".tab")[1].classList.add("active");
      }
    }

    function renderUsersTable() {
      const userObj = users.find(u => u.username === loggedUser);
      if (!userObj || !userObj.isAdmin) return;
      const tbody = document.querySelector("#usersTable tbody");
      tbody.innerHTML = "";
      users.forEach(u => {
        tbody.innerHTML += `
          <tr>
            <td>${u.username}</td>
            <td>${u.isAdmin ? "ADM" : "Usuário"}</td>
            <td>
              ${u.username !== "adm" ? `
                <button class="action-btn delete-btn" onclick="deleteUser('${u.username}')">Excluir</button>
                <button class="action-btn reset-btn" onclick="forceReset('${u.username}')">Redefinir Senha</button>
                <button class="action-btn promote-btn" onclick="toggleAdmin('${u.username}')">${u.isAdmin ? "Rebaixar" : "Promover"} ADM</button>
                <button class="action-btn edit-btn" onclick="editUserName('${u.username}')">Ajustar</button>
              ` : `<span class="view-only">Protegido</span>`}
            </td>
          </tr>
        `;
      });
    }

    window.deleteUser = function(username) {
      if (!confirm("Excluir usuário " + username + "?")) return;
      users = users.filter(u => u.username !== username);
      reservas = reservas.filter(r => r.organizador !== username);
      saveData(); renderUsersTable(); renderTable();
    };

    window.forceReset = function(username) {
      const newPass = prompt("Digite a nova senha para " + username + ":");
      if (!newPass) return;
      const user = users.find(u => u.username === username);
      if (user) {
        user.password = newPass; saveData(); alert("Senha redefinida!");
      }
    };

    window.toggleAdmin = function(username) {
      const user = users.find(u => u.username === username);
      if (user) {
        user.isAdmin = !user.isAdmin;
        saveData(); renderUsersTable();
      }
    };

    window.editUserName = function(username) {
      const newName = prompt("Digite o novo nome de usuário:", username);
      if (!newName) return;
      if (users.some(u => u.username.toLowerCase() === newName.toLowerCase())) {
        alert("Esse nome já está em uso!"); return;
      }
      const user = users.find(u => u.username === username);
      if (user) {
        reservas.forEach(r => { if (r.organizador === user.username) r.organizador = newName; });
        user.username = newName;
        saveData(); renderUsersTable(); renderTable();
        alert("Nome de usuário atualizado com sucesso!");
      }
    };

    document.getElementById("logoffBtn").addEventListener("click", logoff);

    if (loggedUser) showMain(); else showLogin();
  </script>
</body>
</html>
